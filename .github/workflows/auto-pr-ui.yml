name: Auto PR – UI

on:
  issues:
    types: [opened, edited, labeled]

permissions:
  contents: write
  pull-requests: write

jobs:
  build-ui:
    # Run only for open issues that either start with "Build: " or have the "build-request" label
    if: >
      github.event.issue.state == 'open' &&
      (startsWith(github.event.issue.title, 'Build: ') ||
       contains(join(github.event.issue.labels.*.name, ', '), 'build-request'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Capture title/body safely, and parse intent/route from the title.
      - name: Capture & parse issue meta
        id: meta
        env:
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        run: |
          set -eu
          printf '%s' "$ISSUE_TITLE" > issue_title.txt
          printf '%s' "$ISSUE_BODY"  > issue_body.txt

          # Expect: "Build: <intent> | <route> | <ui title>"
          STRIPPED="$(sed -n 's/^Build:[[:space:]]*//p' issue_title.txt)"

          INTENT="$(printf '%s' "$STRIPPED" | cut -d '|' -f1 | xargs)"
          ROUTE="$(printf  '%s' "$STRIPPED" | cut -d '|' -f2 | xargs)"
          UITITLE="$(printf '%s' "$STRIPPED" | cut -d '|' -f3- | xargs)"

          echo "intent=$INTENT"   >> "$GITHUB_OUTPUT"
          echo "route=$ROUTE"     >> "$GITHUB_OUTPUT"
          echo "uititle=$UITITLE" >> "$GITHUB_OUTPUT"

      - name: Guard parsed fields
        run: |
          echo "Intent: '${{ steps.meta.outputs.intent }}'"
          echo "Route:  '${{ steps.meta.outputs.route }}'"
          echo "Title:  '${{ steps.meta.outputs.uititle }}'"
          test -n "${{ steps.meta.outputs.intent }}" || (echo "Missing intent in title"; exit 1)
          test -n "${{ steps.meta.outputs.route }}"  || (echo "Missing route in title"; exit 1)

      - name: Scaffold UI (page + plan)
        env:
          ROUTE: ${{ steps.meta.outputs.route }}
        run: |
          set -eu
          mkdir -p "ops"
          # Save the issue body verbatim as a plan file (no heredocs)
          cp issue_body.txt "ops/ui-plan-${ROUTE:-unknown}.md"

          # Make the page if it doesn't exist (write with printf, no heredocs)
          PAGE_DIR="app/${ROUTE}"
          mkdir -p "$PAGE_DIR"
          if [ ! -f "$PAGE_DIR/page.tsx" ]; then
            {
              printf '%s\n' '"use client";'
              printf '%s\n' 'import React from "react";'
              printf '%s\n' ''
              printf '%s\n' 'export default function Page() {'
              printf '%s\n' '  return ('
              printf '%s\n' '    <div className="p-6 space-y-3">'
              printf '%s\n' '      <h1 className="text-2xl font-bold">Coming soon</h1>'
              printf '%s\n' '      <p>This tab will render data from the backend for this route.</p>'
              printf '%s\n' '    </div>'
              printf '%s\n' '  );'
              printf '%s\n' '}'
            } > "$PAGE_DIR/page.tsx"
          fi

      - name: Create PR
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ format('auto/ui-{0}', github.run_id) }}
          base: main
          commit-message: "feat(ui): scaffold ${{ steps.meta.outputs.route }} from issue #${{ github.event.issue.number }}"
          title: "PR: ${{ steps.meta.outputs.route }} — build from issue #${{ github.event.issue.number }}"
          body: |
            Auto-generated from issue #${{ github.event.issue.number }}.
            Intent: ${{ steps.meta.outputs.intent }}
            Route:  ${{ steps.meta.outputs.route }}
          labels: automated
